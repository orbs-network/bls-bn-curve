package dkg_federation_test

import (
	"testing"
	"fmt"
	"github.com/orbs-network/bls-bn-curve/dkgclient"
)

const clientCount = 5
const threshold = 3

func TestFederation(t *testing.T) {
	fmt.Printf("DKG Test start with clientCount=%d threshold=%d", clientCount, threshold)

	clients := make([]dkgclient.Client, clientCount)
	//for i := 0; i < clientCount; i++ {
	//	clients[i] = CreateDkgNode()
	//}

	enroll(clients)
	commit(clients)
	verify(clients)
}

func enroll(clients []dkgclient.Client) {
	enrollDone := make(chan bool)

	for i := 0; i < len(clients); i++ {
		go clients[i].Enroll(enrollDone)
	}
	for i := 0; i < len(clients); i++ {
		<-enrollDone
	}

	fmt.Printf("Enroll done")
}

func commit(clients []dkgclient.Client) {
	commitDone := make(chan bool)

	for i := 0; i < len(clients); i++ {
		go clients[i].Commit(commitDone)
	}
	for i := 0; i < len(clients); i++ {
		<-commitDone
	}

	fmt.Printf("Commit done")
}

func verify(clients []dkgclient.Client) {
	verifyDone := make(chan bool)

	for i := 0; i < len(clients); i++ {
		go clients[i].Verify(verifyDone)
	}
	for i := 0; i < len(clients); i++ {
		<-verifyDone
	}

	fmt.Printf("Verify done")
}

